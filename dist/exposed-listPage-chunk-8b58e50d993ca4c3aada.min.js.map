{"version":3,"file":"exposed-listPage-chunk-8b58e50d993ca4c3aada.min.js","mappings":"0LAEA,MAAMA,EAAU,CACZ,CACIC,MAAO,OACPC,GAAI,QAER,CACID,MAAO,YACPC,GAAI,cAGNC,EAAS,EAAGC,IAAAA,EAAKC,gBAAAA,KACX,gBAAoB,WAAgB,KACxC,gBAAoB,EAAAC,UAAW,CAAEJ,GAAIF,EAAQ,GAAGE,GAAIG,gBAAiBA,GACjE,gBAAoB,EAAAE,aAAc,CAAEC,KAAM,MAAOC,KAAML,EAAIM,SAASD,KAAME,UAAWP,EAAIM,SAASC,aACtG,gBAAoB,EAAAL,UAAW,CAAEJ,GAAIF,EAAQ,GAAGE,GAAIG,gBAAiBA,GACjE,gBAAoB,EAAAE,aAAc,CAAEC,KAAM,YAAaC,KAAML,EAAIM,SAASC,cAEhFC,EAAY,EAAGC,KAAAA,EAAMC,eAAAA,EAAgBC,OAAAA,EAAQC,UAAAA,KACvC,gBAAoB,EAAAC,iBAAkB,CAAEJ,KAAMA,EAAMC,eAAgBA,EAAgBC,OAAQA,EAAQC,UAAWA,EAAWhB,QAASA,EAASkB,IAAKf,IAEhJgB,EAAU,CACnB,CACIC,gBAAiB,WACjBC,KAAM,UACNC,QAAUC,GAASA,EAAIb,SAASD,KAAKe,SAAS,kBAAoB,YAAc,QAChFC,OAAQ,CAACC,EAAOH,KACZ,IAAII,EACJ,GAA8B,QAAzBA,EAAKD,EAAME,gBAA6B,IAAPD,OAAgB,EAASA,EAAGE,OAAQ,CACtE,GAAIN,EAAIb,SAASD,KAAKe,SAAS,kBAC3B,OAAOE,EAAME,SAASJ,SAAS,aAEnC,IAAKD,EAAIb,SAASD,KAAKe,SAAS,kBAC5B,OAAOE,EAAME,SAASJ,SAAS,SAGvC,OAAO,GAEXM,MAAO,CACH,CAAE5B,GAAI,YAAaD,MAAO,kBAC1B,CAAEC,GAAI,QAASD,MAAO,iBA0BlC,EAtBiB,KACb,MAAO8B,EAAMhB,EAAQC,IAAa,IAAAgB,qBAAoB,CAClDC,iBAAkB,CACdC,QAAS,KACT1B,KAAM,OAEV2B,QAAQ,EACRC,YAAY,KAETvB,EAAMwB,EAAcC,IAAkB,IAAAC,mBAAkBR,EAAMZ,EAAS,CAC1EV,KAAM,CAAEmB,SAAU,CAAC,gBAEvB,OAAQ,gBAAoB,WAAgB,KACxC,gBAAoB,EAAAY,eAAgB,CAAEvC,MAAO,4BACzC,gBAAoB,EAAAwC,eAAgB,CAAER,iBAAkB,OAAS,eACrE,gBAAoB,EAAAS,aAAc,KAC9B,gBAAoB,EAAAC,eAAgB,CAAE9B,KAAMA,EAAME,OAAQA,EAAQ6B,WAAYzB,EAASmB,eAAgBA,IACvG,gBAAoB1B,EAAW,CAAEC,KAAMwB,EAAcvB,eAAgBD,EAAME,OAAQA,EAAQC,UAAWA,KAC1G,gBAAoB,EAAA0B,aAAc,KAC9B,gBAAoB,IAAK,KAAM,uBAC/B,gBAAoB,EAAAG,aAAc,CAAErC,KAAM","sources":["webpack://console-demo-plugin/./components/ListPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ListPageHeader, ListPageBody, ListPageCreate, VirtualizedTable, useK8sWatchResource, useListPageFilter, ListPageFilter, TableData, ResourceLink, ResourceIcon, } from '@openshift-console/dynamic-plugin-sdk';\nconst columns = [\n    {\n        title: 'Name',\n        id: 'name',\n    },\n    {\n        title: 'Namespace',\n        id: 'namespace',\n    },\n];\nconst PodRow = ({ obj, activeColumnIDs }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TableData, { id: columns[0].id, activeColumnIDs: activeColumnIDs },\n            React.createElement(ResourceLink, { kind: \"Pod\", name: obj.metadata.name, namespace: obj.metadata.namespace })),\n        React.createElement(TableData, { id: columns[1].id, activeColumnIDs: activeColumnIDs },\n            React.createElement(ResourceLink, { kind: \"Namespace\", name: obj.metadata.namespace }))));\n};\nconst PodsTable = ({ data, unfilteredData, loaded, loadError }) => {\n    return (React.createElement(VirtualizedTable, { data: data, unfilteredData: unfilteredData, loaded: loaded, loadError: loadError, columns: columns, Row: PodRow }));\n};\nexport const filters = [\n    {\n        filterGroupName: 'App type',\n        type: 'pod-app',\n        reducer: (pod) => (pod.metadata.name.includes('kube-scheduler') ? 'scheduler' : 'other'),\n        filter: (input, pod) => {\n            var _a;\n            if ((_a = input.selected) === null || _a === void 0 ? void 0 : _a.length) {\n                if (pod.metadata.name.includes('kube-scheduler')) {\n                    return input.selected.includes('scheduler');\n                }\n                if (!pod.metadata.name.includes('kube-scheduler')) {\n                    return input.selected.includes('other');\n                }\n            }\n            return true;\n        },\n        items: [\n            { id: 'scheduler', title: 'Scheduler pods' },\n            { id: 'other', title: 'Other pods' },\n        ],\n    },\n];\nconst ListPage = () => {\n    const [pods, loaded, loadError] = useK8sWatchResource({\n        groupVersionKind: {\n            version: 'v1',\n            kind: 'Pod',\n        },\n        isList: true,\n        namespaced: true,\n    });\n    const [data, filteredData, onFilterChange] = useListPageFilter(pods, filters, {\n        name: { selected: ['openshift'] },\n    });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ListPageHeader, { title: \"OpenShift Pods List Page\" },\n            React.createElement(ListPageCreate, { groupVersionKind: \"Pod\" }, \"Create Pod\")),\n        React.createElement(ListPageBody, null,\n            React.createElement(ListPageFilter, { data: data, loaded: loaded, rowFilters: filters, onFilterChange: onFilterChange }),\n            React.createElement(PodsTable, { data: filteredData, unfilteredData: data, loaded: loaded, loadError: loadError })),\n        React.createElement(ListPageBody, null,\n            React.createElement(\"p\", null, \"Sample ResourceIcon\"),\n            React.createElement(ResourceIcon, { kind: \"Pod\" }))));\n};\nexport default ListPage;\n"],"names":["columns","title","id","PodRow","obj","activeColumnIDs","TableData","ResourceLink","kind","name","metadata","namespace","PodsTable","data","unfilteredData","loaded","loadError","VirtualizedTable","Row","filters","filterGroupName","type","reducer","pod","includes","filter","input","_a","selected","length","items","pods","useK8sWatchResource","groupVersionKind","version","isList","namespaced","filteredData","onFilterChange","useListPageFilter","ListPageHeader","ListPageCreate","ListPageBody","ListPageFilter","rowFilters","ResourceIcon"],"sourceRoot":""}