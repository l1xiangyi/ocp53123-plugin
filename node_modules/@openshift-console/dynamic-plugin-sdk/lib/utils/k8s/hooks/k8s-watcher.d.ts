import { K8sModel } from '../../../api/common-types';
import { SDKStoreState } from '../../../app/redux-types';
import { WatchK8sResource } from '../../../extensions/console-types';
import { CustomError } from '../../error/custom-error';
import { GetIDAndDispatch, MakeQuery, Query } from './k8s-watch-types';
export declare class NoModelError extends CustomError {
    constructor();
}
export declare const makeReduxID: (k8sKind: K8sModel, query: Query, cluster?: string) => string;
export declare const makeQuery: MakeQuery;
export declare const INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL: unique symbol;
export declare const INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL: unique symbol;
export declare const getReduxData: (immutableData: any, resource: WatchK8sResource) => any;
export declare const getIDAndDispatch: GetIDAndDispatch<SDKStoreState>;
