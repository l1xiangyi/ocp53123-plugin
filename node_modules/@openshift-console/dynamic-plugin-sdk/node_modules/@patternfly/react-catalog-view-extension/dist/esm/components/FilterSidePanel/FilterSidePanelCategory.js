import { __rest } from "tslib";
import * as React from 'react';
import { Button } from '@patternfly/react-core';
import formStyles from '@patternfly/react-styles/css/components/Form/form';
import { css } from '@patternfly/react-styles';
import { childrenToArray } from '../../helpers/util';
export const FilterSidePanelCategory = (_a) => {
    var { children = null, className = '', title = null, maxShowCount = 5, leeway = 2, showAll = false, onShowAllToggle = () => null, showText = null, hideText = null } = _a, props = __rest(_a, ["children", "className", "title", "maxShowCount", "leeway", "showAll", "onShowAllToggle", "showText", "hideText"]);
    const classes = css('filter-panel-pf-category', className);
    const childrenArray = childrenToArray(children);
    const itemCount = childrenArray.length;
    const hiddenCount = itemCount - maxShowCount;
    let shownChildren;
    let showAllToggle = null;
    if (hiddenCount <= leeway || showAll) {
        shownChildren = children;
        if (hiddenCount > leeway) {
            showAllToggle = (React.createElement(Button, { variant: "link", onClick: onShowAllToggle }, hideText || 'Show less'));
        }
    }
    else {
        shownChildren = childrenArray.slice(0, maxShowCount);
        if (hiddenCount > leeway) {
            showAllToggle = (React.createElement(Button, { variant: "link", isInline: true, onClick: onShowAllToggle }, showText || `Show ${hiddenCount} more`));
        }
    }
    return (React.createElement("form", Object.assign({ className: classes }, props),
        React.createElement("fieldset", { className: `${css(formStyles.formFieldset)} filter-panel-pf-category-items` },
            title && React.createElement("legend", { className: "filter-panel-pf-category-title" }, title),
            shownChildren,
            showAllToggle)));
};
FilterSidePanelCategory.displayName = 'FilterSidePanelCategory';
export default FilterSidePanelCategory;
//# sourceMappingURL=FilterSidePanelCategory.js.map