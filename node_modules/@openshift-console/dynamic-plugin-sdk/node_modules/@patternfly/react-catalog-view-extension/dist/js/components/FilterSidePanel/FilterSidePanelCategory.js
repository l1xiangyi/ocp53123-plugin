"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterSidePanelCategory = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const react_core_1 = require("@patternfly/react-core");
const form_1 = tslib_1.__importDefault(require("@patternfly/react-styles/css/components/Form/form"));
const react_styles_1 = require("@patternfly/react-styles");
const util_1 = require("../../helpers/util");
exports.FilterSidePanelCategory = (_a) => {
    var { children = null, className = '', title = null, maxShowCount = 5, leeway = 2, showAll = false, onShowAllToggle = () => null, showText = null, hideText = null } = _a, props = tslib_1.__rest(_a, ["children", "className", "title", "maxShowCount", "leeway", "showAll", "onShowAllToggle", "showText", "hideText"]);
    const classes = react_styles_1.css('filter-panel-pf-category', className);
    const childrenArray = util_1.childrenToArray(children);
    const itemCount = childrenArray.length;
    const hiddenCount = itemCount - maxShowCount;
    let shownChildren;
    let showAllToggle = null;
    if (hiddenCount <= leeway || showAll) {
        shownChildren = children;
        if (hiddenCount > leeway) {
            showAllToggle = (React.createElement(react_core_1.Button, { variant: "link", onClick: onShowAllToggle }, hideText || 'Show less'));
        }
    }
    else {
        shownChildren = childrenArray.slice(0, maxShowCount);
        if (hiddenCount > leeway) {
            showAllToggle = (React.createElement(react_core_1.Button, { variant: "link", isInline: true, onClick: onShowAllToggle }, showText || `Show ${hiddenCount} more`));
        }
    }
    return (React.createElement("form", Object.assign({ className: classes }, props),
        React.createElement("fieldset", { className: `${react_styles_1.css(form_1.default.formFieldset)} filter-panel-pf-category-items` },
            title && React.createElement("legend", { className: "filter-panel-pf-category-title" }, title),
            shownChildren,
            showAllToggle)));
};
exports.FilterSidePanelCategory.displayName = 'FilterSidePanelCategory';
exports.default = exports.FilterSidePanelCategory;
//# sourceMappingURL=FilterSidePanelCategory.js.map